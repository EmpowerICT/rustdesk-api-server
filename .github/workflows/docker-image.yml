name: Docker Image CI

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Manual trigger

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Get version from version.py
      id: get_version
      run: |
        app_version=$(cat version.py |sed -ne "s/APP_VERSION\s=\s'v\(.*\)'/\1/gp")
        echo "app_version=${app_version}" >> $GITHUB_ENV

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ env.app_version }}
          type=raw,value=latest
          type=sha,format=long

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .  # Changed from 'docker' to '.' as Dockerfile is in root
        file: Dockerfile  # Changed from 'docker/Dockerfile' to 'Dockerfile'
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          MAINTAINER=${{ github.repository_owner }}
          BRANCH=${{ github.ref_name }}
          SOURCE_COMMIT=${{ github.sha }}
